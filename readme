This project deploys a serverless architecture using AWS Lambda, API Gateway, and SNS.
The Lambda function receives two numbers via HTTP POST, calculates their sum, returns the result via API Gateway, and sends the same result to an email using SNS.

Folder structure:

AWS-CloudBuzz/
├── iac/ # Terraform code
│ ├── main.tf # All resources: Lambda, SNS, API GW, IAM
│ ├── provider.tf # AWS provider configuration
│ └── outputs.tf # Terraform outputs (API URL, etc.)
├── lambda/
│ ├── lambda_function.py # Python code
│ └── lambda.zip # Zipped code for deployment

Steps to deploy:

Start by running aws configure and set the region to us-east-1
Go to the lambda folder and create a ZIP file of the function
On Windows, use: Compress-Archive -Path lambda_function.py -DestinationPath lambda.zip
On Linux or Mac, use: zip lambda.zip lambda_function.py
Make sure the lambda.zip file exists in the folder — this is what Terraform will deploy as the Lambda function
Next, go to the iac folder and run terraform init to initialize the environment
Then run terraform apply and confirm with yes when prompted
Once the deployment is complete, check your email at edosharon.work@gmail.com and confirm the SNS subscription (you won’t get emails until you approve it)
After confirming, you can test the function by sending a POST request to the API Gateway endpoint you got from Terraform output

Example curl command:

curl -X POST https://<your-api-id>.execute-api.us-east-1.amazonaws.com/sum
-H "Content-Type: application/json"
-d "{"num1": 4, "num2": 9}"

You should receive a JSON response like:

{
"result": 13
}

And you’ll also get an email with the same result

If you want the email notifications to go to a different address, change the value in the aws_sns_topic_subscription resource inside main.tf before running terraform apply again

To delete all resources when you're done, simply run:

terraform destroy